[{"E:\\migu_app\\src\\reportWebVitals.ts":"1","E:\\migu_app\\src\\index.tsx":"2","E:\\migu_app\\src\\App.tsx":"3","E:\\migu_app\\src\\components\\home\\index.js":"4","E:\\migu_app\\src\\components\\home\\laylistRecom\\index.js":"5","E:\\migu_app\\src\\components\\home\\playLists\\index.js":"6","E:\\migu_app\\src\\components\\home\\digitalAlbum\\index.js":"7","E:\\migu_app\\src\\components\\home\\playLists\\Content.js":"8","E:\\migu_app\\src\\common\\headSet\\index.js":"9","E:\\migu_app\\src\\components\\playlist\\index.js":"10","E:\\migu_app\\src\\components\\home\\newCourier\\index.js":"11","E:\\migu_app\\src\\components\\home\\playLists\\stores\\index.js":"12","E:\\migu_app\\src\\components\\header\\index.js":"13","E:\\migu_app\\src\\components\\singer\\index.js":"14","E:\\migu_app\\src\\components\\titleMore\\index.js":"15","E:\\migu_app\\src\\components\\home\\bodyBottom\\index.js":"16","E:\\migu_app\\src\\components\\home\\newDiscShelve\\index.js":"17","E:\\migu_app\\src\\http\\index.js":"18","E:\\migu_app\\src\\common\\playBtn\\index.js":"19","E:\\migu_app\\src\\common\\albumuSelection\\index.js":"20","E:\\migu_app\\src\\components\\home\\playLists\\stores\\useStore.js":"21","E:\\migu_app\\src\\components\\home\\playLists\\components\\pane\\index.js":"22","E:\\migu_app\\src\\components\\home\\songList\\shuffFigure\\index.js":"23","E:\\migu_app\\src\\components\\home\\songList\\delail\\index.tsx":"24","E:\\migu_app\\src\\components\\home\\songList\\index.tsx":"25","E:\\migu_app\\src\\components\\home\\songList\\store\\index.tsx":"26","E:\\migu_app\\src\\components\\home\\songList\\content.tsx":"27","E:\\migu_app\\src\\components\\home\\songList\\store\\useStore.js":"28","E:\\migu_app\\src\\components\\home\\singerList\\index.tsx":"29"},{"size":425,"mtime":1607997950581,"results":"30","hashOfConfig":"31"},{"size":547,"mtime":1608012802544,"results":"32","hashOfConfig":"31"},{"size":601,"mtime":1608013391021,"results":"33","hashOfConfig":"31"},{"size":1743,"mtime":1608110173154,"results":"34","hashOfConfig":"31"},{"size":2729,"mtime":1608108310795,"results":"35","hashOfConfig":"31"},{"size":231,"mtime":1608177583548,"results":"36","hashOfConfig":"31"},{"size":1178,"mtime":1608107906824,"results":"37","hashOfConfig":"31"},{"size":4477,"mtime":1608177583519,"results":"38","hashOfConfig":"31"},{"size":1613,"mtime":1606803417484,"results":"39","hashOfConfig":"31"},{"size":133,"mtime":1606098515798,"results":"40","hashOfConfig":"31"},{"size":5028,"mtime":1606877683958,"results":"41","hashOfConfig":"31"},{"size":535,"mtime":1608177583553,"results":"42","hashOfConfig":"31"},{"size":2778,"mtime":1606101969819,"results":"43","hashOfConfig":"31"},{"size":121,"mtime":1606100811741,"results":"44","hashOfConfig":"31"},{"size":426,"mtime":1606737051286,"results":"45","hashOfConfig":"31"},{"size":456,"mtime":1608107156991,"results":"46","hashOfConfig":"31"},{"size":1339,"mtime":1608105389470,"results":"47","hashOfConfig":"31"},{"size":1246,"mtime":1608110273388,"results":"48","hashOfConfig":"31"},{"size":546,"mtime":1606816603164,"results":"49","hashOfConfig":"31"},{"size":2090,"mtime":1608108110464,"results":"50","hashOfConfig":"31"},{"size":1122,"mtime":1608177583555,"results":"51","hashOfConfig":"31"},{"size":705,"mtime":1608177583544,"results":"52","hashOfConfig":"31"},{"size":7150,"mtime":1608101422421,"results":"53","hashOfConfig":"31"},{"size":939,"mtime":1608084435749,"results":"54","hashOfConfig":"31"},{"size":221,"mtime":1608082965197,"results":"55","hashOfConfig":"31"},{"size":3413,"mtime":1608090413248,"results":"56","hashOfConfig":"31"},{"size":490,"mtime":1608082965118,"results":"57","hashOfConfig":"31"},{"size":322,"mtime":1608082965243,"results":"58","hashOfConfig":"31"},{"size":973,"mtime":1608106404593,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1ep9osy",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"62"},"E:\\migu_app\\src\\reportWebVitals.ts",[],["136","137"],"E:\\migu_app\\src\\index.tsx",[],"E:\\migu_app\\src\\App.tsx",[],"E:\\migu_app\\src\\components\\home\\index.js",["138","139","140","141","142","143","144","145","146","147"],"import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './index.less';\r\nimport TitleMore from '../titleMore/index';\r\nimport WengPlay from './playLists';\r\nimport LaylistRecom from './laylistRecom/index';\r\nimport NewCourier from './newCourier/index';\r\nimport NewDiscShelve from './newDiscShelve';\r\nimport DigitalAlbum from './digitalAlbum';\r\nimport SongList from './songList/index';\r\nimport SingerList from './singerList/index';\r\nimport BodyBottom from './bodyBottom/index';\r\n\r\nfunction IndexHome() {\r\n    return (<div className=\"migu_main_body\">\r\n         <div className=\"shuffing\">\r\n            <WengPlay></WengPlay>\r\n        </div>\r\n        {/* <div className=\"song_catage\">\r\n            <img src=\"https://cdnmusic.migu.cn/tycms_picture/20/06/169/200617144848198_396x160_1430.png\"></img>\r\n            <img src=\"https://cdnmusic.migu.cn/tycms_picture/20/06/169/200617144824970_396x160_7614.png\"></img>\r\n            <img src=\"https://cdnmusic.migu.cn/tycms_picture/20/06/169/200617144759295_396x160_2765.png\"></img>\r\n            <img src=\"https://cdnmusic.migu.cn/tycms_picture/20/06/169/200617144901907_396x160_8302.png\"></img>\r\n        </div>\r\n\r\n        <TitleMore title=\"歌单推荐\"></TitleMore>\r\n        <LaylistRecom></LaylistRecom>\r\n        <NewCourier></NewCourier>\r\n        <TitleMore title=\"新碟上架\"></TitleMore>\r\n        <NewDiscShelve></NewDiscShelve>\r\n\r\n        <TitleMore title=\"数字专辑\"></TitleMore>\r\n        <DigitalAlbum></DigitalAlbum> \r\n\r\n        <TitleMore title=\"排行榜\"></TitleMore>\r\n        <SongList></SongList>\r\n        <TitleMore title=\"音乐人\"></TitleMore>\r\n        <SingerList></SingerList>\r\n        <BodyBottom></BodyBottom> */}\r\n\r\n\r\n    </div>)\r\n}\r\nexport default IndexHome;",["148","149"],"E:\\migu_app\\src\\components\\home\\laylistRecom\\index.js",["150","151"],"// 首页歌单推荐\r\nimport React, { useEffect, useState } from 'react'\r\nimport service from '../../../http/index';\r\nimport HeadSet from '../../../common/headSet';\r\nimport PlayBtn from '../../../common/playBtn';\r\n\r\nimport './index.less'\r\nfunction LaylistRecom() {\r\n    const [songList, setSongList] = useState([]);\r\n    const [leftImageInfo, setLeftImageInfo] = useState({});\r\n    const [showId, setShowId] = useState('');\r\n    useEffect(() => {\r\n        getSongList();\r\n    }, [])\r\n    function getSongList() {\r\n        service({\r\n            url: 'personalized',\r\n            method: 'get',\r\n            params: { limit: 10 }\r\n        }).then(res => {\r\n            setSongList([...res]);\r\n            const temObj = res[Math.floor(Math.random() * 10)];\r\n            setLeftImageInfo({ ...temObj })\r\n        })\r\n    }\r\n    function handleMouneEnter(id) {\r\n        setShowId(id);\r\n    }\r\n    function handleMouseLeave() {\r\n        setShowId('');\r\n    }\r\n    return <div className=\"laylist_recom\">\r\n        <div className=\"laylist_recom_main\">\r\n            <div className=\"left\">\r\n                <div className=\"container\">\r\n                    <div className=\"mask\"></div>\r\n                    <img className=\"back_fliter\" src={leftImageInfo.picUrl}></img>\r\n                    <div className=\"container_gd\">\r\n                        <div className=\"span_in\">专属推荐歌单</div>\r\n                        <img src={leftImageInfo.picUrl}></img>\r\n                        <div className=\"bdata-title\">\r\n                            {leftImageInfo.name}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"right\">\r\n                {\r\n                    songList.map(item => {\r\n                        return <li\r\n                            className=\"item_box\"\r\n                            key={item.id}\r\n                            onMouseEnter={() => handleMouneEnter(item.id)}\r\n                            onMouseLeave={handleMouseLeave}\r\n                            >\r\n                            <div className=\"item_content\"\r\n                                style={{\r\n                                    backgroundImage: `url(${item.picUrl})`\r\n                                }}\r\n                            >\r\n                                <HeadSet playNum={item.playCount}></HeadSet>\r\n                                {showId === item.id ? <PlayBtn></PlayBtn> : null}\r\n                            </div>\r\n                            <span className=\"item_title\">{item.name}</span>\r\n                        </li>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default LaylistRecom;","E:\\migu_app\\src\\components\\home\\playLists\\index.js",["152"],"E:\\migu_app\\src\\components\\home\\digitalAlbum\\index.js",["153"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport service from '../../../http';\r\nimport AlbumuSelection from '../../../common/albumuSelection';\r\n\r\nfunction DigitalAlbum() {\r\n    const [songList, setSongList] = useState([]);\r\n    useEffect(() => {\r\n        getSongList();\r\n    }, []);\r\n    function getSongList() {\r\n        service({\r\n            url: 'album/songsaleboard',\r\n            methods: 'get',\r\n            params: {\r\n                limit: 5,\r\n                type: 'week',\r\n                albumType: 0\r\n            }\r\n        }).then(res => {\r\n            const temArr = res.slice(0, 5);\r\n            let retArr = [];\r\n            temArr.map(item => {\r\n                const obj = {\r\n                    songName: item.albumName,\r\n                    singName: item.artistName,\r\n                    imgUrl: item.coverUrl,\r\n                    saleNum: item.saleNum\r\n                };\r\n                retArr.push(obj);\r\n            })\r\n            setSongList([...retArr]);\r\n        })\r\n    }\r\n    return <Fragment>\r\n        <AlbumuSelection songList={songList} isAblumu={true}></AlbumuSelection>\r\n    </Fragment>\r\n}\r\nexport default DigitalAlbum;","E:\\migu_app\\src\\components\\home\\playLists\\Content.js",["154"],"import { map } from \"lodash\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { usePlayListsStore } from \"./stores\";\r\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Pane from \"./components/pane\";\r\n\r\nimport \"./index.less\";\r\n\r\nlet timer;\r\n\r\nconst PlayLists = () => {\r\n  const { prefixCls, mainData, mainStore } = usePlayListsStore();\r\n\r\n  const { setCurrentKey, setCurrentIndex, currentIndex } = mainStore;\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleChange = (id, index) => {\r\n    setCurrentKey(id);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentKey(mainData[0]?.id);\r\n    let i = 1;\r\n    timer = setInterval(() => {\r\n      if (i > mainData.length - 1) i = 0;\r\n      setCurrentKey(mainData[i]?.id);\r\n      setCurrentIndex(i++);\r\n    }, [2000]);\r\n  }, [mainData]);\r\n\r\n  const renderShadowleft = () => {\r\n    if (currentIndex === 0) return null;\r\n    return currentIndex * 22;\r\n  };\r\n\r\n  const handleMouseEnter = () => {\r\n    if (timer) {\r\n      clearInterval(timer);\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    let i = currentIndex;\r\n    timer = setInterval(() => {\r\n      if (i > mainData.length - 1) i = 0;\r\n      setCurrentKey(mainData[i].id);\r\n      setCurrentIndex(i++);\r\n    }, [2000]);\r\n  };\r\n\r\n  const renderFooter = () => (\r\n    <div className={`${prefixCls}-footer`}>\r\n      {map(mainData, ({ id }, index) => (\r\n        <span\r\n          onClick={() => handleChange(id, index)}\r\n          key={index}\r\n          className={`${prefixCls}-footer-item`}\r\n        />\r\n      ))}\r\n      <span\r\n        className={`${prefixCls}-footer-shadow`}\r\n        style={{\r\n          left: renderShadowleft() || 0,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const renderItemLeft = (index) => {\r\n    if (index < currentIndex) {\r\n      return `${(index - currentIndex + 1) * 50}%`;\r\n    }\r\n    if (index === currentIndex) {\r\n      return \"6%\";\r\n    }\r\n    return `${(index - currentIndex) * 50}%`;\r\n  };\r\n\r\n  const renderLists = () => {\r\n    const tempArr = [];\r\n    const mainComponents = (\r\n      <>\r\n        {map(mainData, (item, index) => (\r\n          <Pane\r\n            {...item}\r\n            index={index}\r\n            key={item?.id}\r\n            left={renderItemLeft(index)}\r\n            handleChange={handleChange}\r\n          />\r\n        ))}\r\n      </>\r\n    );\r\n    const endIndex = mainData.length - 1;\r\n\r\n    const head = (\r\n      <Pane\r\n        {...mainData[endIndex]}\r\n        index={endIndex}\r\n        key={mainData[endIndex]?.id}\r\n        left=\"0\"\r\n        handleChange={handleChange}\r\n      />\r\n    );\r\n    const end = (\r\n      <Pane\r\n        {...mainData[0]}\r\n        index={0}\r\n        key={mainData[0]?.id}\r\n        left=\"50%\"\r\n        handleChange={handleChange}\r\n      />\r\n    );\r\n    tempArr.push(mainComponents);\r\n    currentIndex === endIndex && tempArr.push(end);\r\n    currentIndex === 0 && tempArr.unshift(head);\r\n\r\n    return <div className={`${prefixCls}-lists`}>{tempArr}</div>;\r\n  };\r\n\r\n  useEffect(()=>function(){\r\n    if(timer) clearInterval(timer);\r\n  },[])\r\n\r\n  return (\r\n    <div\r\n      className={`${prefixCls}`}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      <div className={`${prefixCls}-main`}>{renderLists()}</div>\r\n\r\n      {renderFooter()}\r\n\r\n      <div className={`${prefixCls}-btnGroups`}>\r\n        <div\r\n          className={`${prefixCls}-btnGroups-left`}\r\n          onClick={() => {\r\n            let tempIndex;\r\n            if (currentIndex === 0) {\r\n              tempIndex = mainData.length - 1;\r\n            } else {\r\n              tempIndex = currentIndex - 1;\r\n            }\r\n            handleChange(mainData[tempIndex].id, tempIndex);\r\n          }}\r\n        >\r\n          <LeftOutlined />\r\n        </div>\r\n        <div\r\n          className={`${prefixCls}-btnGroups-right`}\r\n          onClick={() => {\r\n            let tempIndex;\r\n            if (currentIndex === mainData.length - 1) {\r\n              tempIndex = 0;\r\n            } else {\r\n              tempIndex = currentIndex + 1;\r\n            }\r\n            handleChange(mainData[tempIndex].id, tempIndex);\r\n          }}\r\n        >\r\n          <RightOutlined />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(PlayLists);\r\n","E:\\migu_app\\src\\common\\headSet\\index.js",[],"E:\\migu_app\\src\\components\\playlist\\index.js",[],"E:\\migu_app\\src\\components\\home\\newCourier\\index.js",["155","156","157","158","159"],"import React, { useState, useEffect } from 'react'\r\nimport './index.less'\r\nimport PlayBtn from '../../../common/playBtn';\r\nimport service from '../../../http';\r\n\r\nconst cateGory = [\r\n    {\r\n        label: '华语',\r\n        value: 7,\r\n    }, {\r\n        label: '欧美',\r\n        value: 96,\r\n    }, {\r\n        label: '日本',\r\n        value: 8,\r\n    }, {\r\n        label: '韩国',\r\n        value: 16\r\n    }\r\n]\r\nconst songMap = new Map(); // 定义缓存歌曲map\r\nlet count = 0; // 定义请求次数\r\nfunction NewCourier() {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [type, setType] = useState(7)\r\n    const [songList, setSongList] = useState([]);\r\n    const [leftImgList, setLeftImgList] = useState([]);\r\n    useEffect(() => {\r\n        getSongList(type)\r\n    }, [])\r\n    function getSongList(type) {\r\n        service({\r\n            url: 'top/song',\r\n            methods: 'get',\r\n            params: {\r\n                type,\r\n            }\r\n        }).then(res => {\r\n            songMap.set(type, res);\r\n            changeType(type);\r\n            count++;\r\n        })\r\n    }\r\n    // 格式化时间\r\n    function formattTime(time) {\r\n        const ms = time / 1000;\r\n        let minute = Math.floor(ms / 60);\r\n        let second = Math.floor(ms % 60);\r\n        minute = minute > 10 ? minute : `0${minute}`;\r\n        second = second > 10 ? second : `0${second}`;\r\n        return `${minute}:${second}`;\r\n    }\r\n    function changeType(value) {\r\n        if(value === type && count) {\r\n            return;\r\n        }\r\n        setType(value);\r\n        if(songMap.has(value)) {\r\n            const temArr = [...songMap.get(value)];\r\n            const songArr = temArr.slice(0, 8);\r\n            const retArr = [];\r\n            let singName = [];\r\n            songArr.map(item => {\r\n                singName = []\r\n                item.artists.map(person => {\r\n                    singName.push(person.name);\r\n                })\r\n                const obj = {\r\n                    id: item.id,\r\n                    time: formattTime(item.duration), // 播放时间\r\n                    name: item.name, // 歌曲名称\r\n                    imgUrl: item.album.picUrl, // 图片URl\r\n                    singname: singName.join(' / '),\r\n                }\r\n                retArr.push(obj);\r\n            })\r\n            const leftList = [];\r\n            for(let i = 0; i < 6; i++) {\r\n                leftList.push(retArr[i].imgUrl);\r\n            }\r\n            setLeftImgList([...leftList]);\r\n            setSongList([...retArr]);\r\n        }else {\r\n            getSongList(value);\r\n        }\r\n    }\r\n    function handleMouseEnter(value) {\r\n        setCurrentIndex(value);\r\n    }\r\n    function handleMouseLeave() {\r\n        setCurrentIndex(0);\r\n    }\r\n    return <div className=\"new_courier\">\r\n        <div className=\"new_courier_bg\"></div>\r\n        <div className=\"new_courier_left\">\r\n            <div className=\"staticImgBox\">\r\n                {\r\n                    leftImgList.map(item => <img key={item} src={item}></img>)\r\n                }\r\n            </div>\r\n            <div className=\"play_all_songs\">全部播放</div>\r\n        </div>\r\n        <div className=\"new_courier_right\">\r\n            <div className=\"top_category\">\r\n                {\r\n                    cateGory.map(item => <li\r\n                        style={{color: type === item.value ? '#e91e63' : '#000'}}  \r\n                        onClick={() => changeType(item.value)} \r\n                        key={item.value}>{item.label}</li>)\r\n                }\r\n            </div>\r\n            <div className=\"container\">\r\n                {\r\n                    songList.map((item, index) => <li \r\n                                onMouseEnter={() => handleMouseEnter(index + 1)} \r\n                                onMouseLeave={handleMouseLeave}\r\n                                key={item.id} \r\n                                className=\"item_column\">\r\n                        <div className=\"item_box\">\r\n                            <img \r\n                            className={[\r\n                                currentIndex === index + 1 ? 'selection' : null,\r\n                                \"img_full\"\r\n                            ].join(' ')}\r\n                                src={item.imgUrl}></img>\r\n                            { currentIndex === index + 1 ? <PlayBtn isMini={true}></PlayBtn> : null}\r\n                        </div>\r\n                        <div \r\n                            className=\"item_info\"\r\n                            style={{ backgroundColor: currentIndex === index + 1 ? 'rgb(230, 230, 230)' : null }}\r\n                            >\r\n                            <span className=\"song_name\">{item.name}</span>\r\n                        <span className=\"singger\">{item.singname}</span>\r\n                        </div>\r\n                        <div className=\"item_time\">{item.time}</div>\r\n                    </li>)\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default NewCourier;","E:\\migu_app\\src\\components\\home\\playLists\\stores\\index.js",["160"],"import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport service from \"../../../../http\";\r\n\r\nimport useStore from './useStore';\r\nconst Store = createContext();\r\n\r\nexport function usePlayListsStore() {\r\n  return useContext(Store);\r\n}\r\n\r\nexport const StoreProvider = (props) => {\r\n  const { children } = props;\r\n  const [mainData, setMainData] = useState([]);\r\n  useEffect(() => {\r\n      getBannerList();\r\n  }, [])\r\n\r\n  function getBannerList() {\r\n    service({\r\n      url: 'banner',\r\n      methods: 'get',\r\n    }).then(res => {\r\n      const temArr = [];\r\n      let index = 1;\r\n      res.map(item => {\r\n        const obj = {\r\n          value: item.imageUrl,\r\n          id: index++,\r\n        }\r\n        temArr.push(obj);\r\n      })\r\n      setMainData([...temArr])\r\n    })\r\n  }\r\n  const mainStore = useStore();\r\n\r\n\r\n  const value = {\r\n    ...props,\r\n    prefixCls: \"weng-play\",\r\n    mainStore,\r\n    mainData,\r\n  };\r\n  return <Store.Provider value={value}>{children}</Store.Provider>;\r\n};\r\n","E:\\migu_app\\src\\components\\header\\index.js",["161","162","163"],"import React, { useEffect, useState } from 'react';\r\nimport { Router, Route, Link } from 'react-router-dom';\r\nimport { Input } from 'antd';\r\nimport {\r\n    SearchOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport './index.less'\r\nfunction Header() {\r\n    const [isShowSearch, setIsShowSearch] = useState(true);\r\n    const [mouseEnter, setMouseEnter] = useState(false);\r\n    useEffect(() => {\r\n        screenWidth();\r\n        window.addEventListener('resize', screenWidth)\r\n    }, []);\r\n    function screenWidth() {\r\n        const width = document.documentElement.clientWidth;\r\n        if (width < 1200) {\r\n            setIsShowSearch(false);\r\n        } else {\r\n            setIsShowSearch(true);\r\n        }\r\n    }\r\n    function handleMounseEnter() {\r\n        setMouseEnter(true)\r\n    }\r\n    function handleMounseLeave() {\r\n        setMouseEnter(false)\r\n    }\r\n    return <div className=\"migu_header\">\r\n        <div className=\"migu_header_top\">\r\n            <div className=\"migu_header_logo\">\r\n                <img src=\"https://cdnmusic.migu.cn/tycms_picture/20/10/294/201020171104983_90x26_2640.png\"></img>\r\n            </div>\r\n            <div className=\"migu_header_options\">\r\n                <li>发现</li>\r\n                <li>音乐</li>\r\n                <li>朋友</li>\r\n                <li>凡响计划</li>\r\n                <li>客户端下载</li>\r\n            </div>\r\n            <div className=\"migu_header_search\" style={{ minWidth: isShowSearch ? '250px' : '60px' }}>\r\n                <div className=\"search_body\" onMouseLeave={handleMounseLeave}>\r\n                    <div\r\n                        onMouseEnter={handleMounseEnter}\r\n                        className=\"search_icon\">\r\n                        <SearchOutlined />\r\n                    </div>\r\n                    <div className=\"search_content\" style={{ width: isShowSearch || mouseEnter ? '250px' : '0' }}>\r\n                        <Input placeholder=\"搜索歌曲、歌手、MV\"></Input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"migu_header_login\">\r\n                <UserOutlined />\r\n            </div>\r\n        </div>\r\n        <footer className=\"migu_header_footer\">\r\n            <div className=\"migu_header_logo\">\r\n            </div>\r\n            <div className=\"migu_header_options\">\r\n                <li>\r\n                    <Link to=\"/home\">首页</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/playlist\">歌单</Link>\r\n                </li>\r\n                <li>专辑</li>\r\n                <li>榜单</li>\r\n                <li>\r\n                    <Link to=\"/singer\">歌手</Link>\r\n                </li>\r\n            </div>\r\n        </footer>\r\n    </div>\r\n}\r\nexport default Header;","E:\\migu_app\\src\\components\\singer\\index.js",[],"E:\\migu_app\\src\\components\\titleMore\\index.js",[],"E:\\migu_app\\src\\components\\home\\bodyBottom\\index.js",["164"],"import React from 'react'\r\nimport './index.less';\r\n\r\nfunction BodyBottom() {\r\n    return (\r\n        <div className=\"body_bottom_container\"> \r\n        <div className=\"top\">\r\n            本项目纯属个人娱乐\r\n        </div>\r\n        <div className=\"bottom\">\r\n            数据来源 <a href=\"https://binaryify.github.io/NeteaseCloudMusicApi/\" target=\"_blank\">网易云接口</a>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BodyBottom;","E:\\migu_app\\src\\components\\home\\newDiscShelve\\index.js",["165","166"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport AlbumuSelection from '../../../common/albumuSelection';\r\nimport service from '../../../http';\r\n\r\nfunction NewDiscShelve() {\r\n    const [songList, setSongList] = useState([]);\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    function getData() {\r\n        service({\r\n            url: '/top/album',\r\n            methods: 'get',\r\n            params: {\r\n                limit: 10\r\n            }\r\n        }).then(res => {\r\n            const weekData = res.slice(0, 10);\r\n            let singArr = [];\r\n            const temSongArr = [];\r\n            weekData.map(item => {\r\n                singArr = [];\r\n                item.artists.map(person => {\r\n                    singArr.push(person.name);\r\n                })\r\n                const obj = {\r\n                    songName: item.name, // 歌曲名称\r\n                    time: item.publishTime, // 发布时间\r\n                    imgUrl: item.picUrl, // 图片url\r\n                    singName: singArr.join(' / '), // 歌手名称\r\n                }\r\n                temSongArr.push(obj);\r\n            })\r\n            setSongList([...temSongArr]);\r\n        })\r\n    }\r\n    return <Fragment>\r\n        <AlbumuSelection songList={songList}></AlbumuSelection>\r\n    </Fragment>\r\n}\r\nexport default NewDiscShelve;","E:\\migu_app\\src\\http\\index.js",[],"E:\\migu_app\\src\\common\\playBtn\\index.js",["167"],"import React, { Fragment } from 'react'\r\n\r\nimport './index.less';\r\n\r\nfunction PlayBtn(props) {\r\n    const { isMini } = props;\r\n    return <Fragment>\r\n        <div className=\"play_btn\" style={{width: isMini ? '30px' : '55px',height: isMini ? '30px' : '55px'}}/>\r\n        <img \r\n            className=\"play\" \r\n            src=\"https://cdnmusic.migu.cn/v3/static/img/common/default/btn-play.png\"\r\n            style={{width: isMini ? '40px' : '55px',height: isMini ? '40px' : '55px'}}\r\n            ></img>\r\n    </Fragment>\r\n}\r\nexport default PlayBtn;","E:\\migu_app\\src\\common\\albumuSelection\\index.js",[],"E:\\migu_app\\src\\components\\home\\playLists\\stores\\useStore.js",[],"E:\\migu_app\\src\\components\\home\\playLists\\components\\pane\\index.js",["168"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { usePlayListsStore } from \"../../stores\";\r\n\r\nconst Pane = observer(({ value, index, id, left, handleChange }) => {\r\n  const { prefixCls, mainStore } = usePlayListsStore();\r\n\r\n  const { getCurrentKey } = mainStore;\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${value})`,\r\n        left,\r\n      }}\r\n      onClick={() => handleChange(id, index)}\r\n      className={`${prefixCls}-lists-item ${\r\n        id === getCurrentKey ? `${prefixCls}-lists-item-active` : \"\"\r\n      }`}\r\n    >\r\n      <div className={`${prefixCls}-lists-item-shadow`} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Pane;","E:\\migu_app\\src\\components\\home\\songList\\shuffFigure\\index.js",["169","170","171","172","173","174","175","176","177","178"],"// 首页轮播图\r\nimport React, { useState, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RightOutlined, LeftOutlined, PlayCircleOutlined } from '@ant-design/icons'\r\nimport { ImgListStore } from '../store/index';\r\nimport './index.less'\r\nlet timer = null;\r\nlet optionFlag;\r\nlet indexType = 1;\r\n\r\n\r\nconst optionsArr = [1, 2, 3];\r\nconst trueImageNum = 3; // 真实的图片数量\r\nconst gapDistance = 140; // 左右的间隙距离\r\n\r\nlet temnode = 1;\r\nfunction ShuffFiure() {\r\n    const { changeSongType, threeImageList } = ImgListStore();\r\n    const [imageWidth, setImageWidthValue] = useState(0)\r\n    const [distanceLeft, setDistanceLeft] = useState(0);\r\n    const [titleName, setTitleName] = useState(\"新歌\");\r\n    const [isShowMaskLeft, setShowMaskLeft] = useState(false);\r\n    const [isShowMaskRight, setShowMaksRight] = useState(false);\r\n    const [currentNode, setCurrentNode] = useState(1); // 默认选择第一张图片\r\n    useEffect(() => {\r\n        setImageWidth();\r\n    }, []);\r\n\r\n    function changeNext() {\r\n        setCurrentNode(() => {\r\n            temnode = currentNode === trueImageNum + 1 ? 2 : currentNode + 1;\r\n            return temnode;\r\n        })\r\n        if (distanceLeft === gapDistance - (trueImageNum + 1) * imageWidth) {\r\n            setDistanceLeft(gapDistance - imageWidth)\r\n            animation(gapDistance - imageWidth, gapDistance - 2 * imageWidth, false);\r\n        } else {\r\n            animation(distanceLeft, distanceLeft - imageWidth, false)\r\n        }\r\n    }\r\n    function changePre() {\r\n        setCurrentNode(() => {\r\n            temnode = currentNode === 1 ? trueImageNum : currentNode - 1;\r\n            return temnode\r\n        });\r\n        if (distanceLeft === gapDistance - imageWidth) {\r\n            setDistanceLeft(gapDistance - trueImageNum * imageWidth)\r\n            animation(gapDistance - (trueImageNum + 1) * imageWidth, gapDistance - trueImageNum * imageWidth, true);\r\n        } else {\r\n            animation(distanceLeft, distanceLeft + imageWidth, true);\r\n        }\r\n    }\r\n    function animation(currentDistance, targetDistance, isAdd) {\r\n        let distance = currentDistance;\r\n        distance = isAdd ? distance + imageWidth / 10 : distance - imageWidth / 10;\r\n        setDistanceLeft(distance);\r\n        if (isAdd && distance >= targetDistance || !isAdd && distance <= targetDistance) {\r\n            cancelAnimationFrame(timer);\r\n            setDistanceLeft(targetDistance)\r\n        } else {\r\n            timer = requestAnimationFrame(() => {\r\n                animation(distance, targetDistance, isAdd)\r\n            })\r\n        }\r\n    }\r\n    function setImageWidth() {\r\n        const temWidth = 170;\r\n        setImageWidthValue(temWidth);\r\n        setDistanceLeft(temnode === trueImageNum + 1 ? gapDistance - temnode * temWidth : (gapDistance - temWidth) - (temnode - 1) * temWidth);\r\n    }\r\n    function handleMouseEnter(flag) {\r\n        if (flag === 'left') {\r\n            setShowMaskLeft(true)\r\n        } else {\r\n            setShowMaksRight(true)\r\n        }\r\n    }\r\n    function handleMouseLeave() {\r\n        setShowMaksRight(false);\r\n        setShowMaskLeft(false);\r\n    }\r\n    function handleClick(flag) {\r\n        if (flag === 'left') {\r\n            changePre();\r\n            indexType = indexType === 1 ? indexType = 3 : --indexType;\r\n            changeSongType(indexType);\r\n        } else {\r\n            changeNext();\r\n            indexType = indexType === 3 ? indexType = 1 : ++indexType;\r\n            changeSongType(indexType);\r\n        }\r\n        if(indexType === 1) {\r\n            setTitleName(\"新歌\");\r\n        }else if(indexType === 3) {\r\n            setTitleName(\"热歌\");\r\n        }else {\r\n            setTitleName(\"原创\")\r\n        }\r\n    }\r\n    function changeImage(flag) {\r\n        if (currentNode < flag) {\r\n            const currentDistance = -(flag - 1) * imageWidth;\r\n            const targetDistance = currentDistance - imageWidth + gapDistance;\r\n            animation(currentDistance, targetDistance, false);\r\n        } else {\r\n            const currentDistance = - (flag + 1) * imageWidth;\r\n            const targetDistance = currentDistance + imageWidth + gapDistance;\r\n            animation(currentDistance, targetDistance, true);\r\n        }\r\n        setCurrentNode(flag);\r\n    }\r\n    return (\r\n        <div className=\"shuff_figure\">\r\n            <div className=\"shuff_figure_main\">\r\n                <ul\r\n                    className=\"shuff_figure_content\"\r\n                    style={{ left: `${distanceLeft}px` }}\r\n                >\r\n                    {\r\n                        threeImageList?.map(item => {\r\n                            return (\r\n                                <li className={[\r\n                                    currentNode === item.key ? \"active\" : null,\r\n                                    \"shuff_figure_pic\",\r\n                                ].join(\" \")}\r\n\r\n                                    key={item.key}\r\n                                    style={{ backgroundImage: `url('${item.imgUrl}')`, width: imageWidth }}\r\n                                >\r\n                                    <img src={item.value}></img>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div\r\n                    className=\"shuff_mask mask_left\"\r\n                    // style={{ opacity: !isShowMaskLeft ? '0' : '0.7' }}\r\n                    onClick={() => handleClick('left')}\r\n                    onMouseEnter={() => handleMouseEnter('left')}\r\n                    onMouseLeave={handleMouseLeave}\r\n                >\r\n                    <LeftOutlined />\r\n                </div>\r\n\r\n                <div\r\n                    className=\"shuff_mask mask_right\"\r\n                    // style={{ opacity: !isShowMaskRight ? '0' : '0.7' }}\r\n                    onClick={() => handleClick('right')}\r\n                    onMouseEnter={() => handleMouseEnter('right')}\r\n                    onMouseLeave={handleMouseLeave}\r\n                >\r\n                    <RightOutlined />\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"billboard \">\r\n                <div className=\"slide_title\">尖叫{titleName}榜</div>\r\n                <div className=\"new_time\">每小时更新</div>\r\n                <div className=\"play_billboard\">\r\n                <PlayCircleOutlined />\r\n                    <span>播放全部</span>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"shuff_figure_options\">\r\n                {\r\n                    currentNode === trueImageNum + 1 ? optionFlag = 1 : optionFlag = currentNode,\r\n                    optionsArr.map(item => {\r\n                        return <li\r\n                            key={item}\r\n                            style={{ backgroundColor: optionFlag === item ? 'red' : null }}\r\n                            onClick={() => changeImage(item)}\r\n                        ></li>\r\n                    })\r\n                }\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\nexport default observer(ShuffFiure);","E:\\migu_app\\src\\components\\home\\songList\\delail\\index.tsx",["179","180","181"],"import React, { useState, useEffect } from 'react'\r\nimport { observer } from 'mobx-react-lite';\r\nimport { ImgListStore } from '../store/index';\r\nimport './index.less'\r\n\r\nconst id: number = 3779629;\r\nconst DetailSongList: React.FC<{}> = (props: any) => {\r\n    // @ts-ignore\r\n    const { songList } = ImgListStore();\r\n    return <div className=\"songlist_deatil\">\r\n        {\r\n            songList?.map((item: any) => {\r\n                return <div className=\"song_info\" key={item.key}>\r\n                    <span className=\"index\">{item.key}</span>\r\n                    <div className=\"song_img\" style={{\r\n                        backgroundImage: `url(${item.picUrl})`\r\n                    }}></div>\r\n                    <div className=\"song_name\">{item.songname}</div>\r\n                    <div className=\"singer\">{item.singer}</div>\r\n                </div>\r\n            })\r\n        }\r\n    </div>\r\n}\r\nexport default observer(DetailSongList);","E:\\migu_app\\src\\components\\home\\songList\\index.tsx",["182"],"import React from 'react'\r\nimport Content from './content';\r\nimport { StoreProvider } from './store/index'\r\n\r\nexport default (props: any) => (\r\n    <StoreProvider {...props}>\r\n      <Content />\r\n    </StoreProvider>\r\n  );","E:\\migu_app\\src\\components\\home\\songList\\store\\index.tsx",["183","184","185","186"],"import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport useStore from './useStore';\r\nimport service from '../../../../http/index';\r\n\r\nclass ImageInfo{value: string | undefined; key!: number; imgUrl?: string}\r\n\r\n\r\n\r\n// @ts-ignore\r\nconst Store = createContext();\r\nlet currentSongList: Array<any> = [];\r\n\r\nexport function ImgListStore() {\r\n    return useContext(Store);\r\n}\r\n\r\nclass SongInfo { key!: string | number; songname: any; picUrl: any; singer!: string; }\r\nconst temArr: Array<ImageInfo> = [\r\n    {\r\n        value: 'https://cdnmusic.migu.cn/tycms_picture/20/02/36/20020512065402_360x360_2997.png',\r\n        key: 1,\r\n    }, {\r\n        value: 'https://cdnmusic.migu.cn/tycms_picture/20/04/99/200408163702795_360x360_1614.png',\r\n        key: 2,\r\n    }, {\r\n        value: 'https://cdnmusic.migu.cn/tycms_picture/20/04/99/200408163640868_360x360_6587.png',\r\n        key: 3,\r\n    }\r\n];\r\nexport const StoreProvider = (props: any) => {\r\n    const [songList, setSongList] = useState<SongInfo[]>();\r\n    const [threeImageList, setThreeTmageList] = useState<ImageInfo[]>();\r\n\r\n    const currentInital = (): Array<ImageInfo> => {\r\n        temArr.unshift({\r\n            value: temArr[temArr.length - 1].value,\r\n            key: 0,\r\n            imgUrl: temArr[temArr.length - 1].imgUrl,\r\n        })\r\n        temArr.push({\r\n            value: temArr[1].value,\r\n            key: temArr.length,\r\n            imgUrl: temArr[1].imgUrl,\r\n        })\r\n        temArr.push({\r\n            value: temArr[2].value,\r\n            key: temArr.length,\r\n            imgUrl: temArr[2].imgUrl,\r\n        })\r\n        return temArr;\r\n    }\r\n    const getSongList = (id: number): void => {\r\n        service.get(`/playlist/detail?id=${id}`).then((res: any) => {\r\n            currentSongList = res.tracks.slice(0, 90);\r\n            checkSongList();\r\n            const currentArr = [];\r\n            temArr[0].imgUrl = currentSongList[1].al.picUrl;\r\n            temArr[1].imgUrl = currentSongList[31].al.picUrl;\r\n            temArr[2].imgUrl = currentSongList[61].al.picUrl;\r\n            const ret = currentInital();\r\n            setThreeTmageList([...ret]);\r\n        })\r\n    }\r\n    const checkSongList = (initial: number = 1): void => {\r\n        const temArr: Array<any> = currentSongList.slice((initial - 1) * 30, initial * 30);\r\n        let index: number = 1;\r\n        let arr: SongInfo[] = [];\r\n        temArr.map(item => {\r\n            const obj = {\r\n                key: index < 10 ? `0${index}` : index,\r\n                songname: item.name,\r\n                picUrl: item.al.picUrl,\r\n                singer: formatSingerName(item.ar),\r\n            }\r\n            index = index + 1;\r\n            arr.push(obj);\r\n        })\r\n        setSongList([...arr]);\r\n    }\r\n    const formatSingerName = (arr: Array<any>): string => {\r\n        const temArr: Array<string> = [];\r\n        arr.map(item => {\r\n            temArr.push(item.name);\r\n        })\r\n        return temArr.join('/');\r\n    }\r\n    useEffect(() => {\r\n        getSongList(3779629);\r\n    }, [])\r\n    const changeSongType = (type: number): void => {\r\n        checkSongList(type)\r\n    }\r\n    const { children } = props;\r\n    const mainStore = useStore();\r\n    const value = {\r\n        ...props,\r\n        mainStore,\r\n        songList,\r\n        changeSongType,\r\n        threeImageList\r\n    }\r\n    return <Store.Provider value={value}>{children}</Store.Provider>\r\n}","E:\\migu_app\\src\\components\\home\\songList\\content.tsx",[],"E:\\migu_app\\src\\components\\home\\songList\\store\\useStore.js",[],"E:\\migu_app\\src\\components\\home\\singerList\\index.tsx",["187"],"import React, { Fragment, useState, useEffect }  from 'react'\r\nimport AlbumuSelection from '../../../common/albumuSelection';\r\nimport service from '../../../http';\r\n\r\nconst SingerList: React.FC<{}> = () =>{\r\n    const [singerList, setSingerList] = useState<any[]>([]);\r\n    const getSingerList = () => {\r\n        service.get('/top/artists?offset=0&limit=5').then((res: any) => {\r\n            let singerArr: any = [];\r\n            res.map((item: { name: any; picUrl: any; }) => {\r\n                const obj = {\r\n                    imgUrl: item.picUrl, // 图片url\r\n                    singName: item.name, // 歌手名称\r\n                }\r\n                singerArr.push(obj);\r\n            })\r\n\r\n            setSingerList([...singerArr]);\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getSingerList();\r\n    }, [])\r\n    return <Fragment>\r\n        <AlbumuSelection songList={singerList} noFlag={true}></AlbumuSelection>\r\n    </Fragment>\r\n}\r\nexport default SingerList;",{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"196","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":13},{"ruleId":"192","severity":1,"message":"197","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":17},{"ruleId":"192","severity":1,"message":"198","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":20},{"ruleId":"192","severity":1,"message":"199","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":18},{"ruleId":"192","severity":1,"message":"200","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":21},{"ruleId":"192","severity":1,"message":"201","line":9,"column":8,"nodeType":"194","messageId":"195","endLine":9,"endColumn":20},{"ruleId":"192","severity":1,"message":"202","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":16},{"ruleId":"192","severity":1,"message":"203","line":11,"column":8,"nodeType":"194","messageId":"195","endLine":11,"endColumn":18},{"ruleId":"192","severity":1,"message":"204","line":12,"column":8,"nodeType":"194","messageId":"195","endLine":12,"endColumn":18},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"205","severity":1,"message":"206","line":37,"column":21,"nodeType":"207","endLine":37,"endColumn":77},{"ruleId":"205","severity":1,"message":"206","line":40,"column":25,"nodeType":"207","endLine":40,"endColumn":57},{"ruleId":"208","severity":1,"message":"209","line":6,"column":1,"nodeType":"210","endLine":10,"endColumn":3},{"ruleId":"211","severity":1,"message":"212","line":22,"column":29,"nodeType":"213","messageId":"214","endLine":22,"endColumn":31},{"ruleId":"215","severity":1,"message":"216","line":33,"column":6,"nodeType":"217","endLine":33,"endColumn":16,"suggestions":"218"},{"ruleId":"215","severity":1,"message":"219","line":30,"column":8,"nodeType":"217","endLine":30,"endColumn":10,"suggestions":"220"},{"ruleId":"211","severity":1,"message":"212","line":63,"column":30,"nodeType":"213","messageId":"214","endLine":63,"endColumn":32},{"ruleId":"211","severity":1,"message":"212","line":65,"column":41,"nodeType":"213","messageId":"214","endLine":65,"endColumn":43},{"ruleId":"205","severity":1,"message":"206","line":98,"column":45,"nodeType":"207","endLine":98,"endColumn":72},{"ruleId":"205","severity":1,"message":"206","line":120,"column":29,"nodeType":"207","endLine":125,"endColumn":51},{"ruleId":"211","severity":1,"message":"212","line":25,"column":20,"nodeType":"213","messageId":"214","endLine":25,"endColumn":22},{"ruleId":"192","severity":1,"message":"221","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":16},{"ruleId":"192","severity":1,"message":"222","line":2,"column":18,"nodeType":"194","messageId":"195","endLine":2,"endColumn":23},{"ruleId":"205","severity":1,"message":"206","line":33,"column":17,"nodeType":"207","endLine":33,"endColumn":108},{"ruleId":"223","severity":1,"message":"224","line":11,"column":78,"nodeType":"225","endLine":11,"endColumn":93},{"ruleId":"211","severity":1,"message":"212","line":21,"column":31,"nodeType":"213","messageId":"214","endLine":21,"endColumn":33},{"ruleId":"211","severity":1,"message":"212","line":23,"column":41,"nodeType":"213","messageId":"214","endLine":23,"endColumn":43},{"ruleId":"205","severity":1,"message":"206","line":9,"column":9,"nodeType":"207","endLine":13,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":26},{"ruleId":"192","severity":1,"message":"226","line":8,"column":5,"nodeType":"194","messageId":"195","endLine":8,"endColumn":15},{"ruleId":"192","severity":1,"message":"227","line":12,"column":7,"nodeType":"194","messageId":"195","endLine":12,"endColumn":17},{"ruleId":"192","severity":1,"message":"228","line":22,"column":12,"nodeType":"194","messageId":"195","endLine":22,"endColumn":26},{"ruleId":"192","severity":1,"message":"229","line":23,"column":12,"nodeType":"194","messageId":"195","endLine":23,"endColumn":27},{"ruleId":"230","severity":1,"message":"231","line":57,"column":19,"nodeType":"232","messageId":"233","endLine":57,"endColumn":21},{"ruleId":"230","severity":1,"message":"231","line":57,"column":49,"nodeType":"232","messageId":"233","endLine":57,"endColumn":51},{"ruleId":"230","severity":1,"message":"234","line":57,"column":49,"nodeType":"232","messageId":"233","endLine":57,"endColumn":51},{"ruleId":"230","severity":1,"message":"234","line":57,"column":59,"nodeType":"232","messageId":"233","endLine":57,"endColumn":61},{"ruleId":"192","severity":1,"message":"235","line":100,"column":14,"nodeType":"194","messageId":"195","endLine":100,"endColumn":25},{"ruleId":"205","severity":1,"message":"206","line":130,"column":37,"nodeType":"207","endLine":130,"endColumn":59},{"ruleId":"236","severity":1,"message":"237","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"193","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"236","severity":1,"message":"238","line":6,"column":7,"nodeType":"194","messageId":"195","endLine":6,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":5,"column":1,"nodeType":"210","endLine":9,"endColumn":5},{"ruleId":"236","severity":1,"message":"239","line":56,"column":19,"nodeType":"194","messageId":"195","endLine":56,"endColumn":29},{"ruleId":"211","severity":1,"message":"212","line":68,"column":25,"nodeType":"213","messageId":"214","endLine":68,"endColumn":27},{"ruleId":"211","severity":1,"message":"212","line":82,"column":22,"nodeType":"213","messageId":"214","endLine":82,"endColumn":24},{"ruleId":"215","severity":1,"message":"240","line":89,"column":8,"nodeType":"217","endLine":89,"endColumn":10,"suggestions":"241"},{"ruleId":"211","severity":1,"message":"212","line":10,"column":57,"nodeType":"213","messageId":"214","endLine":10,"endColumn":59},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'TitleMore' is defined but never used.","'LaylistRecom' is defined but never used.","'NewCourier' is defined but never used.","'NewDiscShelve' is defined but never used.","'DigitalAlbum' is defined but never used.","'SongList' is defined but never used.","'SingerList' is defined but never used.","'BodyBottom' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setCurrentIndex' and 'setCurrentKey'. Either include them or remove the dependency array.","ArrayExpression",["244"],"React Hook useEffect has missing dependencies: 'getSongList' and 'type'. Either include them or remove the dependency array.",["245"],"'Router' is defined but never used.","'Route' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'optionFlag' is defined but never used.","'optionsArr' is assigned a value but never used.","'isShowMaskLeft' is assigned a value but never used.","'isShowMaskRight' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'changeImage' is defined but never used.","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","'id' is assigned a value but never used.","'currentArr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSongList'. Either include it or remove the dependency array.",["246"],"no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},"Update the dependencies array to be: [mainData, setCurrentIndex, setCurrentKey]",{"range":"253","text":"254"},"Update the dependencies array to be: [getSongList, type]",{"range":"255","text":"256"},"Update the dependencies array to be: [getSongList]",{"range":"257","text":"258"},[856,866],"[mainData, setCurrentIndex, setCurrentKey]",[751,753],"[getSongList, type]",[3044,3046],"[getSongList]"]