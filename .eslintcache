[{"E:\\migu_app\\src\\reportWebVitals.ts":"1","E:\\migu_app\\src\\index.tsx":"2","E:\\migu_app\\src\\App.tsx":"3","E:\\migu_app\\src\\components\\home\\index.js":"4","E:\\migu_app\\src\\components\\home\\laylistRecom\\index.js":"5","E:\\migu_app\\src\\components\\home\\playLists\\index.js":"6","E:\\migu_app\\src\\components\\home\\digitalAlbum\\index.js":"7","E:\\migu_app\\src\\components\\home\\playLists\\Content.js":"8","E:\\migu_app\\src\\common\\headSet\\index.js":"9","E:\\migu_app\\src\\components\\home\\playLists\\stores\\mappings.js":"10","E:\\migu_app\\src\\components\\playlist\\index.js":"11","E:\\migu_app\\src\\components\\home\\newCourier\\index.js":"12","E:\\migu_app\\src\\components\\home\\playLists\\stores\\index.js":"13","E:\\migu_app\\src\\components\\header\\index.js":"14","E:\\migu_app\\src\\components\\singer\\index.js":"15","E:\\migu_app\\src\\components\\titleMore\\index.js":"16","E:\\migu_app\\src\\components\\home\\bodyBottom\\index.js":"17","E:\\migu_app\\src\\components\\home\\newDiscShelve\\index.js":"18","E:\\migu_app\\src\\http\\index.js":"19","E:\\migu_app\\src\\common\\playBtn\\index.js":"20","E:\\migu_app\\src\\common\\albumuSelection\\index.js":"21","E:\\migu_app\\src\\components\\home\\playLists\\stores\\useStore.js":"22","E:\\migu_app\\src\\components\\home\\playLists\\components\\pane\\index.js":"23","E:\\migu_app\\src\\components\\home\\songList\\shuffFigure\\index.js":"24","E:\\migu_app\\src\\components\\home\\songList\\delail\\index.tsx":"25","E:\\migu_app\\src\\components\\home\\songList\\index.tsx":"26"},{"size":425,"mtime":1607997950581,"results":"27","hashOfConfig":"28"},{"size":547,"mtime":1608012802544,"results":"29","hashOfConfig":"28"},{"size":601,"mtime":1608013391021,"results":"30","hashOfConfig":"28"},{"size":1611,"mtime":1608020912319,"results":"31","hashOfConfig":"28"},{"size":2351,"mtime":1606815812312,"results":"32","hashOfConfig":"28"},{"size":231,"mtime":1606980316606,"results":"33","hashOfConfig":"28"},{"size":1178,"mtime":1606964374806,"results":"34","hashOfConfig":"28"},{"size":4295,"mtime":1607996247917,"results":"35","hashOfConfig":"28"},{"size":1613,"mtime":1606803417484,"results":"36","hashOfConfig":"28"},{"size":1456,"mtime":1607047134886,"results":"37","hashOfConfig":"28"},{"size":133,"mtime":1606098515798,"results":"38","hashOfConfig":"28"},{"size":5028,"mtime":1606877683958,"results":"39","hashOfConfig":"28"},{"size":783,"mtime":1607654479905,"results":"40","hashOfConfig":"28"},{"size":2778,"mtime":1606101969819,"results":"41","hashOfConfig":"28"},{"size":121,"mtime":1606100811741,"results":"42","hashOfConfig":"28"},{"size":426,"mtime":1606737051286,"results":"43","hashOfConfig":"28"},{"size":463,"mtime":1607996247818,"results":"44","hashOfConfig":"28"},{"size":1339,"mtime":1607940369196,"results":"45","hashOfConfig":"28"},{"size":1213,"mtime":1608024758334,"results":"46","hashOfConfig":"28"},{"size":546,"mtime":1606816603164,"results":"47","hashOfConfig":"28"},{"size":1666,"mtime":1606964308335,"results":"48","hashOfConfig":"28"},{"size":383,"mtime":1606980316642,"results":"49","hashOfConfig":"28"},{"size":703,"mtime":1606980316605,"results":"50","hashOfConfig":"28"},{"size":6650,"mtime":1608020414547,"results":"51","hashOfConfig":"28"},{"size":2146,"mtime":1608027890142,"results":"52","hashOfConfig":"28"},{"size":437,"mtime":1608020931847,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1ep9osy",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\migu_app\\src\\reportWebVitals.ts",[],["120","121"],"E:\\migu_app\\src\\index.tsx",[],"E:\\migu_app\\src\\App.tsx",[],"E:\\migu_app\\src\\components\\home\\index.js",["122","123","124","125","126","127","128","129","130"],"E:\\migu_app\\src\\components\\home\\laylistRecom\\index.js",["131","132"],"// 首页歌单推荐\r\nimport React, { useEffect, useState } from 'react'\r\nimport service from '../../../http/index';\r\nimport HeadSet from '../../../common/headSet';\r\nimport PlayBtn from '../../../common/playBtn';\r\n\r\nimport './index.less'\r\nfunction LaylistRecom() {\r\n    const [songList, setSongList] = useState([]);\r\n    const [leftImageInfo, setLeftImageInfo] = useState({});\r\n    useEffect(() => {\r\n        getSongList();\r\n    }, [])\r\n    function getSongList() {\r\n        service({\r\n            url: 'personalized',\r\n            method: 'get',\r\n            params: { limit: 10 }\r\n        }).then(res => {\r\n            setSongList([...res]);\r\n            const temObj = res[Math.floor(Math.random() * 10)];\r\n            setLeftImageInfo({ ...temObj })\r\n        })\r\n    }\r\n    return <div className=\"laylist_recom\">\r\n        <div className=\"laylist_recom_main\">\r\n            <div className=\"left\">\r\n                <div className=\"container\">\r\n                    <div className=\"mask\"></div>\r\n                    <img className=\"back_fliter\" src={leftImageInfo.picUrl}></img>\r\n                    <div className=\"container_gd\">\r\n                        <div className=\"span_in\">专属推荐歌单</div>\r\n                        <img src={leftImageInfo.picUrl}></img>\r\n                        <div className=\"bdata-title\">\r\n                            {leftImageInfo.name}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"right\">\r\n                {\r\n                    songList.map(item => {\r\n                        return <li\r\n                            className=\"item_box\"\r\n                            key={item.id}>\r\n                            <div className=\"item_content\"\r\n                                style={{\r\n                                    backgroundImage: `url(${item.picUrl})`\r\n                                }}\r\n                            >\r\n                                <HeadSet playNum={item.playCount}></HeadSet>\r\n                                <PlayBtn></PlayBtn>\r\n                            </div>\r\n                            <span className=\"item_title\">{item.name}</span>\r\n                        </li>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default LaylistRecom;",["133","134"],"E:\\migu_app\\src\\components\\home\\playLists\\index.js",["135"],"import React from 'react';\r\nimport { StoreProvider } from './stores';\r\nimport Content from './Content';\r\nimport './index.less';\r\n\r\nexport default (props) => (\r\n  <StoreProvider {...props}>\r\n    <Content />\r\n  </StoreProvider>\r\n);\r\n","E:\\migu_app\\src\\components\\home\\digitalAlbum\\index.js",["136"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport service from '../../../http';\r\nimport AlbumuSelection from '../../../common/albumuSelection';\r\n\r\nfunction DigitalAlbum() {\r\n    const [songList, setSongList] = useState([]);\r\n    useEffect(() => {\r\n        getSongList();\r\n    }, []);\r\n    function getSongList() {\r\n        service({\r\n            url: 'album/songsaleboard',\r\n            methods: 'get',\r\n            params: {\r\n                limit: 5,\r\n                type: 'week',\r\n                albumType: 0\r\n            }\r\n        }).then(res => {\r\n            const temArr = res.slice(0, 5);\r\n            let retArr = [];\r\n            temArr.map(item => {\r\n                const obj = {\r\n                    songName: item.albumName,\r\n                    singName: item.artistName,\r\n                    imgUrl: item.coverUrl,\r\n                    saleNum: item.saleNum\r\n                };\r\n                retArr.push(obj);\r\n            })\r\n            setSongList([...retArr]);\r\n        })\r\n    }\r\n    return <Fragment>\r\n        <AlbumuSelection songList={songList} isAblumu={true}></AlbumuSelection>\r\n    </Fragment>\r\n}\r\nexport default DigitalAlbum;","E:\\migu_app\\src\\components\\home\\playLists\\Content.js",["137"],"import { map } from \"lodash\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { usePlayListsStore } from \"./stores\";\r\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Pane from \"./components/pane\";\r\n\r\nimport \"./index.less\";\r\n\r\nlet timer;\r\n\r\nconst PlayLists = () => {\r\n  const { prefixCls, mainData, mainStore } = usePlayListsStore();\r\n\r\n  const { setCurrentKey, setCurrentIndex, currentIndex } = mainStore;\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleChange = (id, index) => {\r\n    setCurrentKey(id);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentKey(mainData[0].id);\r\n    let i = 1;\r\n    timer = setInterval(() => {\r\n      if (i > mainData.length - 1) i = 0;\r\n      setCurrentKey(mainData[i].id);\r\n      setCurrentIndex(i++);\r\n    }, [2000]);\r\n  }, []);\r\n\r\n  const renderShadowleft = () => {\r\n    if (currentIndex === 0) return null;\r\n    return currentIndex * 22;\r\n  };\r\n\r\n  const handleMouseEnter = () => {\r\n    if (timer) {\r\n      clearInterval(timer);\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    let i = currentIndex;\r\n    timer = setInterval(() => {\r\n      if (i > mainData.length - 1) i = 0;\r\n      setCurrentKey(mainData[i].id);\r\n      setCurrentIndex(i++);\r\n    }, [2000]);\r\n  };\r\n\r\n  const renderFooter = () => (\r\n    <div className={`${prefixCls}-footer`}>\r\n      {map(mainData, ({ id }, index) => (\r\n        <span\r\n          onClick={() => handleChange(id, index)}\r\n          key={index}\r\n          className={`${prefixCls}-footer-item`}\r\n        />\r\n      ))}\r\n      <span\r\n        className={`${prefixCls}-footer-shadow`}\r\n        style={{\r\n          left: renderShadowleft() || 0,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const renderItemLeft = (index) => {\r\n    if (index < currentIndex) {\r\n      return `${(index - currentIndex + 1) * 50}%`;\r\n    }\r\n    if (index === currentIndex) {\r\n      return \"6%\";\r\n    }\r\n    return `${(index - currentIndex) * 50}%`;\r\n  };\r\n\r\n  const renderLists = () => {\r\n    const tempArr = [];\r\n    const mainComponents = (\r\n      <>\r\n        {map(mainData, (item, index) => (\r\n          <Pane\r\n            {...item}\r\n            index={index}\r\n            key={item.id}\r\n            left={renderItemLeft(index)}\r\n            handleChange={handleChange}\r\n          />\r\n        ))}\r\n      </>\r\n    );\r\n    const endIndex = mainData.length - 1;\r\n\r\n    const head = (\r\n      <Pane\r\n        {...mainData[endIndex]}\r\n        index={endIndex}\r\n        key={mainData[endIndex].id}\r\n        left=\"0\"\r\n        handleChange={handleChange}\r\n      />\r\n    );\r\n    const end = (\r\n      <Pane\r\n        {...mainData[0]}\r\n        index={0}\r\n        key={mainData[0].id}\r\n        left=\"50%\"\r\n        handleChange={handleChange}\r\n      />\r\n    );\r\n    tempArr.push(mainComponents);\r\n    currentIndex === endIndex && tempArr.push(end);\r\n    currentIndex === 0 && tempArr.unshift(head);\r\n\r\n    return <div className={`${prefixCls}-lists`}>{tempArr}</div>;\r\n  };\r\n\r\n  useEffect(()=>function(){\r\n    if(timer) clearInterval(timer);\r\n  },[])\r\n\r\n  return (\r\n    <div\r\n      className={`${prefixCls}`}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      <div className={`${prefixCls}-main`}>{renderLists()}</div>\r\n\r\n      {renderFooter()}\r\n\r\n      <div className={`${prefixCls}-btnGroups`}>\r\n        <div\r\n          className={`${prefixCls}-btnGroups-left`}\r\n          onClick={() => {\r\n            let tempIndex;\r\n            if (currentIndex === 0) {\r\n              tempIndex = mainData.length - 1;\r\n            } else {\r\n              tempIndex = currentIndex - 1;\r\n            }\r\n            handleChange(mainData[tempIndex].id, tempIndex);\r\n          }}\r\n        >\r\n          <LeftOutlined />\r\n        </div>\r\n        <div\r\n          className={`${prefixCls}-btnGroups-right`}\r\n          onClick={() => {\r\n            let tempIndex;\r\n            if (currentIndex === mainData.length - 1) {\r\n              tempIndex = 0;\r\n            } else {\r\n              tempIndex = currentIndex + 1;\r\n            }\r\n            handleChange(mainData[tempIndex].id, tempIndex);\r\n          }}\r\n        >\r\n          <RightOutlined />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(PlayLists);\r\n","E:\\migu_app\\src\\common\\headSet\\index.js",[],"E:\\migu_app\\src\\components\\home\\playLists\\stores\\mappings.js",["138"],"import resolve from 'resolve';\r\nimport service from '../../../../http';\r\n\r\nconst getBannerList = () => {\r\n    return new Promise((resolve, reject) => {\r\n        service({\r\n            url: 'banner',\r\n            methods: 'get',\r\n            type: 0\r\n        }).then(res => {\r\n             resolve(res);\r\n        }).catch(err => {\r\n            reject(err);\r\n        })\r\n    })\r\n}\r\n\r\ngetBannerList().then(res => {\r\n    console.log(res);\r\n})\r\nconst temArr = [\r\n  {\r\n      value: 'https://cdnmusic.migu.cn/tycms_picture/20/11/328/201123174408869_1400x350_3312.jpg',\r\n      id: 1,\r\n  }, {\r\n      value: 'https://cdnmusic.migu.cn/tycms_picture/20/11/328/201123142739819_1400x350_729.jpg',\r\n      id: 2,\r\n  }, {\r\n      value: 'https://cdnmusic.migu.cn/tycms_picture/20/11/330/201125101232971_1400x350_529.jpg',\r\n      id: 3,\r\n  }, {\r\n      value: 'https://cdnmusic.migu.cn/tycms_picture/20/11/327/201122092610967_1400x350_1017.jpg',\r\n      id: 4,\r\n  }, {\r\n      value: 'https://cdnmusic.migu.cn/tycms_picture/20/11/328/201123100402434_1400x350_6636.jpg',\r\n      id: 5\r\n  }, {\r\n      value: 'https://cdnmusic.migu.cn/tycms_picture/20/11/329/201124093250408_1400x350_1577.jpg',\r\n      id: 6\r\n  }, {\r\n      value: 'https://cdnmusic.migu.cn/tycms_picture/20/11/329/20112411122916_1400x350_8130.jpg',\r\n      id: 7\r\n  }, {\r\n      value: 'https://cdnmusic.migu.cn/tycms_picture/20/03/79/200319225515423_1400x350_5570.jpg',\r\n      id: 8\r\n  }\r\n];\r\n\r\nexport default temArr;","E:\\migu_app\\src\\components\\playlist\\index.js",[],"E:\\migu_app\\src\\components\\home\\newCourier\\index.js",["139","140","141","142","143"],"import React, { useState, useEffect } from 'react'\r\nimport './index.less'\r\nimport PlayBtn from '../../../common/playBtn';\r\nimport service from '../../../http';\r\n\r\nconst cateGory = [\r\n    {\r\n        label: '华语',\r\n        value: 7,\r\n    }, {\r\n        label: '欧美',\r\n        value: 96,\r\n    }, {\r\n        label: '日本',\r\n        value: 8,\r\n    }, {\r\n        label: '韩国',\r\n        value: 16\r\n    }\r\n]\r\nconst songMap = new Map(); // 定义缓存歌曲map\r\nlet count = 0; // 定义请求次数\r\nfunction NewCourier() {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [type, setType] = useState(7)\r\n    const [songList, setSongList] = useState([]);\r\n    const [leftImgList, setLeftImgList] = useState([]);\r\n    useEffect(() => {\r\n        getSongList(type)\r\n    }, [])\r\n    function getSongList(type) {\r\n        service({\r\n            url: 'top/song',\r\n            methods: 'get',\r\n            params: {\r\n                type,\r\n            }\r\n        }).then(res => {\r\n            songMap.set(type, res);\r\n            changeType(type);\r\n            count++;\r\n        })\r\n    }\r\n    // 格式化时间\r\n    function formattTime(time) {\r\n        const ms = time / 1000;\r\n        let minute = Math.floor(ms / 60);\r\n        let second = Math.floor(ms % 60);\r\n        minute = minute > 10 ? minute : `0${minute}`;\r\n        second = second > 10 ? second : `0${second}`;\r\n        return `${minute}:${second}`;\r\n    }\r\n    function changeType(value) {\r\n        if(value === type && count) {\r\n            return;\r\n        }\r\n        setType(value);\r\n        if(songMap.has(value)) {\r\n            const temArr = [...songMap.get(value)];\r\n            const songArr = temArr.slice(0, 8);\r\n            const retArr = [];\r\n            let singName = [];\r\n            songArr.map(item => {\r\n                singName = []\r\n                item.artists.map(person => {\r\n                    singName.push(person.name);\r\n                })\r\n                const obj = {\r\n                    id: item.id,\r\n                    time: formattTime(item.duration), // 播放时间\r\n                    name: item.name, // 歌曲名称\r\n                    imgUrl: item.album.picUrl, // 图片URl\r\n                    singname: singName.join(' / '),\r\n                }\r\n                retArr.push(obj);\r\n            })\r\n            const leftList = [];\r\n            for(let i = 0; i < 6; i++) {\r\n                leftList.push(retArr[i].imgUrl);\r\n            }\r\n            setLeftImgList([...leftList]);\r\n            setSongList([...retArr]);\r\n        }else {\r\n            getSongList(value);\r\n        }\r\n    }\r\n    function handleMouseEnter(value) {\r\n        setCurrentIndex(value);\r\n    }\r\n    function handleMouseLeave() {\r\n        setCurrentIndex(0);\r\n    }\r\n    return <div className=\"new_courier\">\r\n        <div className=\"new_courier_bg\"></div>\r\n        <div className=\"new_courier_left\">\r\n            <div className=\"staticImgBox\">\r\n                {\r\n                    leftImgList.map(item => <img key={item} src={item}></img>)\r\n                }\r\n            </div>\r\n            <div className=\"play_all_songs\">全部播放</div>\r\n        </div>\r\n        <div className=\"new_courier_right\">\r\n            <div className=\"top_category\">\r\n                {\r\n                    cateGory.map(item => <li\r\n                        style={{color: type === item.value ? '#e91e63' : '#000'}}  \r\n                        onClick={() => changeType(item.value)} \r\n                        key={item.value}>{item.label}</li>)\r\n                }\r\n            </div>\r\n            <div className=\"container\">\r\n                {\r\n                    songList.map((item, index) => <li \r\n                                onMouseEnter={() => handleMouseEnter(index + 1)} \r\n                                onMouseLeave={handleMouseLeave}\r\n                                key={item.id} \r\n                                className=\"item_column\">\r\n                        <div className=\"item_box\">\r\n                            <img \r\n                            className={[\r\n                                currentIndex === index + 1 ? 'selection' : null,\r\n                                \"img_full\"\r\n                            ].join(' ')}\r\n                                src={item.imgUrl}></img>\r\n                            { currentIndex === index + 1 ? <PlayBtn isMini={true}></PlayBtn> : null}\r\n                        </div>\r\n                        <div \r\n                            className=\"item_info\"\r\n                            style={{ backgroundColor: currentIndex === index + 1 ? 'rgb(230, 230, 230)' : null }}\r\n                            >\r\n                            <span className=\"song_name\">{item.name}</span>\r\n                        <span className=\"singger\">{item.singname}</span>\r\n                        </div>\r\n                        <div className=\"item_time\">{item.time}</div>\r\n                    </li>)\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default NewCourier;","E:\\migu_app\\src\\components\\home\\playLists\\stores\\index.js",["144","145"],"import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport service from \"../../../../http\";\r\nimport temArr from \"./mappings\";\r\n\r\nimport useStore from './useStore';\r\nconst Store = createContext();\r\n\r\nexport function usePlayListsStore() {\r\n  return useContext(Store);\r\n}\r\n\r\nexport const StoreProvider = (props) => {\r\n  const { children } = props;\r\n  const [mainData, setMainData] = useState(temArr);\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  function getBannerList() {\r\n    service({\r\n      url: 'banner',\r\n      methods: 'get',\r\n      \r\n    })\r\n  }\r\n  const mainStore = useStore();\r\n\r\n\r\n  const value = {\r\n    ...props,\r\n    prefixCls: \"weng-play\",\r\n    mainStore,\r\n    mainData,\r\n  };\r\n  return <Store.Provider value={value}>{children}</Store.Provider>;\r\n};\r\n","E:\\migu_app\\src\\components\\header\\index.js",["146","147","148"],"import React, { useEffect, useState } from 'react';\r\nimport { Router, Route, Link } from 'react-router-dom';\r\nimport { Input } from 'antd';\r\nimport {\r\n    SearchOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport './index.less'\r\nfunction Header() {\r\n    const [isShowSearch, setIsShowSearch] = useState(true);\r\n    const [mouseEnter, setMouseEnter] = useState(false);\r\n    useEffect(() => {\r\n        screenWidth();\r\n        window.addEventListener('resize', screenWidth)\r\n    }, []);\r\n    function screenWidth() {\r\n        const width = document.documentElement.clientWidth;\r\n        if (width < 1200) {\r\n            setIsShowSearch(false);\r\n        } else {\r\n            setIsShowSearch(true);\r\n        }\r\n    }\r\n    function handleMounseEnter() {\r\n        setMouseEnter(true)\r\n    }\r\n    function handleMounseLeave() {\r\n        setMouseEnter(false)\r\n    }\r\n    return <div className=\"migu_header\">\r\n        <div className=\"migu_header_top\">\r\n            <div className=\"migu_header_logo\">\r\n                <img src=\"https://cdnmusic.migu.cn/tycms_picture/20/10/294/201020171104983_90x26_2640.png\"></img>\r\n            </div>\r\n            <div className=\"migu_header_options\">\r\n                <li>发现</li>\r\n                <li>音乐</li>\r\n                <li>朋友</li>\r\n                <li>凡响计划</li>\r\n                <li>客户端下载</li>\r\n            </div>\r\n            <div className=\"migu_header_search\" style={{ minWidth: isShowSearch ? '250px' : '60px' }}>\r\n                <div className=\"search_body\" onMouseLeave={handleMounseLeave}>\r\n                    <div\r\n                        onMouseEnter={handleMounseEnter}\r\n                        className=\"search_icon\">\r\n                        <SearchOutlined />\r\n                    </div>\r\n                    <div className=\"search_content\" style={{ width: isShowSearch || mouseEnter ? '250px' : '0' }}>\r\n                        <Input placeholder=\"搜索歌曲、歌手、MV\"></Input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"migu_header_login\">\r\n                <UserOutlined />\r\n            </div>\r\n        </div>\r\n        <footer className=\"migu_header_footer\">\r\n            <div className=\"migu_header_logo\">\r\n            </div>\r\n            <div className=\"migu_header_options\">\r\n                <li>\r\n                    <Link to=\"/home\">首页</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/playlist\">歌单</Link>\r\n                </li>\r\n                <li>专辑</li>\r\n                <li>榜单</li>\r\n                <li>\r\n                    <Link to=\"/singer\">歌手</Link>\r\n                </li>\r\n            </div>\r\n        </footer>\r\n    </div>\r\n}\r\nexport default Header;","E:\\migu_app\\src\\components\\singer\\index.js",[],"E:\\migu_app\\src\\components\\titleMore\\index.js",[],"E:\\migu_app\\src\\components\\home\\bodyBottom\\index.js",[],"E:\\migu_app\\src\\components\\home\\newDiscShelve\\index.js",["149","150"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport AlbumuSelection from '../../../common/albumuSelection';\r\nimport service from '../../../http';\r\n\r\nfunction NewDiscShelve() {\r\n    const [songList, setSongList] = useState([]);\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    function getData() {\r\n        service({\r\n            url: '/top/album',\r\n            methods: 'get',\r\n            params: {\r\n                limit: 10\r\n            }\r\n        }).then(res => {\r\n            const weekData = res.slice(0, 10);\r\n            let singArr = [];\r\n            const temSongArr = [];\r\n            weekData.map(item => {\r\n                singArr = [];\r\n                item.artists.map(person => {\r\n                    singArr.push(person.name);\r\n                })\r\n                const obj = {\r\n                    songName: item.name, // 歌曲名称\r\n                    time: item.publishTime, // 发布时间\r\n                    imgUrl: item.picUrl, // 图片url\r\n                    singName: singArr.join(' / '), // 歌手名称\r\n                }\r\n                temSongArr.push(obj);\r\n            })\r\n            setSongList([...temSongArr]);\r\n        })\r\n    }\r\n    return <Fragment>\r\n        <AlbumuSelection songList={songList}></AlbumuSelection>\r\n    </Fragment>\r\n}\r\nexport default NewDiscShelve;","E:\\migu_app\\src\\http\\index.js",[],"E:\\migu_app\\src\\common\\playBtn\\index.js",["151"],"import React, { Fragment } from 'react'\r\n\r\nimport './index.less';\r\n\r\nfunction PlayBtn(props) {\r\n    const { isMini } = props;\r\n    return <Fragment>\r\n        <div className=\"play_btn\" style={{width: isMini ? '30px' : '55px',height: isMini ? '30px' : '55px'}}/>\r\n        <img \r\n            className=\"play\" \r\n            src=\"https://cdnmusic.migu.cn/v3/static/img/common/default/btn-play.png\"\r\n            style={{width: isMini ? '40px' : '55px',height: isMini ? '40px' : '55px'}}\r\n            ></img>\r\n    </Fragment>\r\n}\r\nexport default PlayBtn;","E:\\migu_app\\src\\common\\albumuSelection\\index.js",[],"E:\\migu_app\\src\\components\\home\\playLists\\stores\\useStore.js",[],"E:\\migu_app\\src\\components\\home\\playLists\\components\\pane\\index.js",["152"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { usePlayListsStore } from \"../../stores\";\r\n\r\nconst Pane = observer(({ value, index, id, left, handleChange }) => {\r\n  const { prefixCls, mainStore } = usePlayListsStore();\r\n\r\n  const { getCurrentKey } = mainStore;\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${value})`,\r\n        left,\r\n      }}\r\n      onClick={() => handleChange(id, index)}\r\n      className={`${prefixCls}-lists-item ${\r\n        id === getCurrentKey ? `${prefixCls}-lists-item-active` : \"\"\r\n      }`}\r\n    >\r\n      <div className={`${prefixCls}-lists-item-shadow`} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Pane;","E:\\migu_app\\src\\components\\home\\songList\\shuffFigure\\index.js",["153","154","155","156","157","158","159","160","161"],"// 首页轮播图\r\nimport React, { useState, useEffect } from 'react';\r\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons'\r\nimport './index.less'\r\nlet timer = null;\r\nlet optionFlag;\r\nconst temArr = [\r\n    {\r\n\r\n        value: 'https://cdnmusic.migu.cn/tycms_picture/20/02/36/20020512065402_360x360_2997.png',\r\n        key: 1,\r\n    }, {\r\n        value: 'https://cdnmusic.migu.cn/tycms_picture/20/04/99/200408163702795_360x360_1614.png',\r\n        key: 2,\r\n    }, {\r\n        value: 'https://cdnmusic.migu.cn/tycms_picture/20/04/99/200408163702795_360x360_1614.png',\r\n        key: 3,\r\n\r\n    }\r\n];\r\n\r\ntemArr.unshift({\r\n    value: temArr[temArr.length - 1].value,\r\n    key: 0\r\n})\r\ntemArr.push({\r\n    value: temArr[1].value,\r\n    key: temArr.length,\r\n})\r\ntemArr.push({\r\n    value: temArr[2].value,\r\n    key: temArr.length,\r\n})\r\n\r\nconst optionsArr = [1, 2, 3];\r\nconst trueImageNum = 3; // 真实的图片数量\r\nconst gapDistance = 140; // 左右的间隙距离\r\n\r\nlet temnode = 1;\r\nfunction ShuffFiure() {\r\n    const [imageWidth, setImageWidthValue] = useState(0)\r\n    const [distanceLeft, setDistanceLeft] = useState(0);\r\n    const [isShowMaskLeft, setShowMaskLeft] = useState(false);\r\n    const [isShowMaskRight, setShowMaksRight] = useState(false);\r\n    const [currentNode, setCurrentNode] = useState(1); // 默认选择第一张图片\r\n    useEffect(() => {\r\n        setImageWidth();\r\n    }, []);\r\n    function changeNext() {\r\n        setCurrentNode(() => {\r\n            temnode = currentNode === trueImageNum + 1 ? 2 : currentNode + 1;\r\n            return temnode;\r\n        })\r\n        if (distanceLeft === gapDistance - (trueImageNum + 1) * imageWidth) {\r\n            setDistanceLeft(gapDistance - imageWidth)\r\n            animation(gapDistance - imageWidth, gapDistance - 2 * imageWidth, false);\r\n        } else {\r\n            animation(distanceLeft, distanceLeft - imageWidth, false)\r\n        }\r\n    }\r\n    function changePre() {\r\n        setCurrentNode(() => {\r\n            temnode = currentNode === 1 ? trueImageNum : currentNode - 1;\r\n            return temnode\r\n        });\r\n        if (distanceLeft === gapDistance - imageWidth) {\r\n            setDistanceLeft(gapDistance - trueImageNum * imageWidth)\r\n            animation(gapDistance - (trueImageNum + 1) * imageWidth, gapDistance - trueImageNum * imageWidth, true);\r\n        } else {\r\n            animation(distanceLeft, distanceLeft + imageWidth, true);\r\n        }\r\n    }\r\n    function animation(currentDistance, targetDistance, isAdd) {\r\n        let distance = currentDistance;\r\n        distance = isAdd ? distance + imageWidth / 10 : distance - imageWidth / 10;\r\n        setDistanceLeft(distance);\r\n        if (isAdd && distance >= targetDistance || !isAdd && distance <= targetDistance) {\r\n            cancelAnimationFrame(timer);\r\n            setDistanceLeft(targetDistance)\r\n        } else {\r\n            timer = requestAnimationFrame(() => {\r\n                animation(distance, targetDistance, isAdd)\r\n            })\r\n        }\r\n    }\r\n    function setImageWidth() {\r\n        const temWidth = 170;\r\n        setImageWidthValue(temWidth);\r\n        setDistanceLeft(temnode === trueImageNum + 1 ? gapDistance - temnode * temWidth : (gapDistance - temWidth) - (temnode - 1) * temWidth);\r\n    }\r\n    function handleMouseEnter(flag) {\r\n        if (flag === 'left') {\r\n            setShowMaskLeft(true)\r\n        } else {\r\n            setShowMaksRight(true)\r\n        }\r\n    }\r\n    function handleMouseLeave() {\r\n        setShowMaksRight(false);\r\n        setShowMaskLeft(false);\r\n    }\r\n    function handleClick(flag) {\r\n        if (flag === 'left') {\r\n            changePre();\r\n        } else {\r\n            changeNext();\r\n        }\r\n    }\r\n    function changeImage(flag) {\r\n        if (currentNode < flag) {\r\n            const currentDistance = -(flag - 1) * imageWidth;\r\n            const targetDistance = currentDistance - imageWidth + gapDistance;\r\n            animation(currentDistance, targetDistance, false);\r\n        } else {\r\n            const currentDistance = - (flag + 1) * imageWidth;\r\n            const targetDistance = currentDistance + imageWidth + gapDistance;\r\n            animation(currentDistance, targetDistance, true);\r\n        }\r\n        setCurrentNode(flag);\r\n    }\r\n    return (\r\n        <div className=\"shuff_figure\">\r\n            <div className=\"shuff_figure_main\">\r\n                <ul\r\n                    className=\"shuff_figure_content\"\r\n                    style={{ left: `${distanceLeft}px` }}\r\n                >\r\n                    {\r\n                        temArr.map(item => {\r\n                            return (\r\n                                <li className={[\r\n                                    currentNode === item.key ? \"active\" : null,\r\n                                    \"shuff_figure_pic\",\r\n                                ].join(\" \")}\r\n\r\n                                    key={item.key}\r\n                                    style={{ backgroundImage: `url('${item.value}')`, width: imageWidth }}\r\n                                >\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div\r\n                    className=\"shuff_mask mask_left\"\r\n                    // style={{ opacity: !isShowMaskLeft ? '0' : '0.7' }}\r\n                    onClick={() => handleClick('left')}\r\n                    onMouseEnter={() => handleMouseEnter('left')}\r\n                    onMouseLeave={handleMouseLeave}\r\n                >\r\n                    <LeftOutlined />\r\n                </div>\r\n\r\n                <div\r\n                    className=\"shuff_mask mask_right\"\r\n                    // style={{ opacity: !isShowMaskRight ? '0' : '0.7' }}\r\n                    onClick={() => handleClick('right')}\r\n                    onMouseEnter={() => handleMouseEnter('right')}\r\n                    onMouseLeave={handleMouseLeave}\r\n                >\r\n                    <RightOutlined />\r\n\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"shuff_figure_options\">\r\n                {\r\n                    currentNode === trueImageNum + 1 ? optionFlag = 1 : optionFlag = currentNode,\r\n                    optionsArr.map(item => {\r\n                        return <li\r\n                            key={item}\r\n                            style={{ backgroundColor: optionFlag === item ? 'red' : null }}\r\n                            onClick={() => changeImage(item)}\r\n                        ></li>\r\n                    })\r\n                }\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\nexport default ShuffFiure;","E:\\migu_app\\src\\components\\home\\songList\\delail\\index.tsx",["162","163","164"],"E:\\migu_app\\src\\components\\home\\songList\\index.tsx",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"173","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":13},{"ruleId":"169","severity":1,"message":"174","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":17},{"ruleId":"169","severity":1,"message":"175","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":16},{"ruleId":"169","severity":1,"message":"176","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":20},{"ruleId":"169","severity":1,"message":"177","line":7,"column":8,"nodeType":"171","messageId":"172","endLine":7,"endColumn":18},{"ruleId":"169","severity":1,"message":"178","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":21},{"ruleId":"169","severity":1,"message":"179","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":20},{"ruleId":"169","severity":1,"message":"180","line":11,"column":8,"nodeType":"171","messageId":"172","endLine":11,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":30,"column":21,"nodeType":"183","endLine":30,"endColumn":77},{"ruleId":"181","severity":1,"message":"182","line":33,"column":25,"nodeType":"183","endLine":33,"endColumn":57},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"184","severity":1,"message":"185","line":6,"column":1,"nodeType":"186","endLine":10,"endColumn":3},{"ruleId":"187","severity":1,"message":"188","line":22,"column":29,"nodeType":"189","messageId":"190","endLine":22,"endColumn":31},{"ruleId":"191","severity":1,"message":"192","line":33,"column":6,"nodeType":"193","endLine":33,"endColumn":8,"suggestions":"194"},{"ruleId":"169","severity":1,"message":"195","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":15},{"ruleId":"191","severity":1,"message":"196","line":30,"column":8,"nodeType":"193","endLine":30,"endColumn":10,"suggestions":"197"},{"ruleId":"187","severity":1,"message":"188","line":63,"column":30,"nodeType":"189","messageId":"190","endLine":63,"endColumn":32},{"ruleId":"187","severity":1,"message":"188","line":65,"column":41,"nodeType":"189","messageId":"190","endLine":65,"endColumn":43},{"ruleId":"181","severity":1,"message":"182","line":98,"column":45,"nodeType":"183","endLine":98,"endColumn":72},{"ruleId":"181","severity":1,"message":"182","line":120,"column":29,"nodeType":"183","endLine":125,"endColumn":51},{"ruleId":"169","severity":1,"message":"198","line":14,"column":20,"nodeType":"171","messageId":"172","endLine":14,"endColumn":31},{"ruleId":"169","severity":1,"message":"199","line":19,"column":12,"nodeType":"171","messageId":"172","endLine":19,"endColumn":25},{"ruleId":"169","severity":1,"message":"200","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":16},{"ruleId":"169","severity":1,"message":"201","line":2,"column":18,"nodeType":"171","messageId":"172","endLine":2,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":33,"column":17,"nodeType":"183","endLine":33,"endColumn":108},{"ruleId":"187","severity":1,"message":"188","line":21,"column":31,"nodeType":"189","messageId":"190","endLine":21,"endColumn":33},{"ruleId":"187","severity":1,"message":"188","line":23,"column":41,"nodeType":"189","messageId":"190","endLine":23,"endColumn":43},{"ruleId":"181","severity":1,"message":"182","line":9,"column":9,"nodeType":"183","endLine":13,"endColumn":14},{"ruleId":"169","severity":1,"message":"170","line":2,"column":17,"nodeType":"171","messageId":"172","endLine":2,"endColumn":26},{"ruleId":"169","severity":1,"message":"202","line":6,"column":5,"nodeType":"171","messageId":"172","endLine":6,"endColumn":15},{"ruleId":"169","severity":1,"message":"203","line":35,"column":7,"nodeType":"171","messageId":"172","endLine":35,"endColumn":17},{"ruleId":"169","severity":1,"message":"204","line":43,"column":12,"nodeType":"171","messageId":"172","endLine":43,"endColumn":26},{"ruleId":"169","severity":1,"message":"205","line":44,"column":12,"nodeType":"171","messageId":"172","endLine":44,"endColumn":27},{"ruleId":"206","severity":1,"message":"207","line":77,"column":19,"nodeType":"208","messageId":"209","endLine":77,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":77,"column":49,"nodeType":"208","messageId":"209","endLine":77,"endColumn":51},{"ruleId":"206","severity":1,"message":"210","line":77,"column":49,"nodeType":"208","messageId":"209","endLine":77,"endColumn":51},{"ruleId":"206","severity":1,"message":"210","line":77,"column":59,"nodeType":"208","messageId":"209","endLine":77,"endColumn":61},{"ruleId":"169","severity":1,"message":"211","line":109,"column":14,"nodeType":"171","messageId":"172","endLine":109,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":15,"column":25,"nodeType":"189","messageId":"190","endLine":15,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":29,"column":22,"nodeType":"189","messageId":"190","endLine":29,"endColumn":24},{"ruleId":"191","severity":1,"message":"212","line":45,"column":8,"nodeType":"193","endLine":45,"endColumn":10,"suggestions":"213"},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'TitleMore' is defined but never used.","'WengPlay' is defined but never used.","'LaylistRecom' is defined but never used.","'NewCourier' is defined but never used.","'NewDiscShelve' is defined but never used.","'DigitalAlbum' is defined but never used.","'BodyBottom' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'mainData', 'setCurrentIndex', and 'setCurrentKey'. Either include them or remove the dependency array.","ArrayExpression",["216"],"'resolve' is defined but never used.","React Hook useEffect has missing dependencies: 'getSongList' and 'type'. Either include them or remove the dependency array.",["217"],"'setMainData' is assigned a value but never used.","'getBannerList' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'optionFlag' is defined but never used.","'optionsArr' is assigned a value but never used.","'isShowMaskLeft' is assigned a value but never used.","'isShowMaskRight' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'changeImage' is defined but never used.","React Hook useEffect has missing dependencies: 'checkSongList' and 'getSongList'. Either include them or remove the dependency array.",["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [mainData, setCurrentIndex, setCurrentKey]",{"range":"225","text":"226"},"Update the dependencies array to be: [getSongList, type]",{"range":"227","text":"228"},"Update the dependencies array to be: [checkSongList, getSongList]",{"range":"229","text":"230"},[854,856],"[mainData, setCurrentIndex, setCurrentKey]",[751,753],"[getSongList, type]",[1515,1517],"[checkSongList, getSongList]"]